{"version":3,"sources":["components/TypesList.js","components/Card.js","layouts/PokeList.js","layouts/Filter.js","components/App.js","index.js"],"names":["TypesList","props","style","types","map","type","backgroundColor","react_default","a","createElement","key","className","Card","pokemon","name","toUpperCase","slice","src","img","alt","components_TypesList","PokeList","_props$state","state","pokemons","select","list","Object","toConsumableArray","sort","b","id","filter","value","toLowerCase","includes","filtredList","components_Card","Filter","htmlFor","onChange","handle","App","handleChange","e","target","_this","setState","_this2","this","fetch","then","response","json","results","item","url","sprites","front_default","prevState","concat","layouts_Filter","layouts_PokeList","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.27bf2686.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TypesList = (props) => {\r\n    let style = null;\r\n    const types = props.types.map( type => {\r\n        switch (type) {\r\n            case \"poison\":\r\n              style = {backgroundColor:\"violet\"}\r\n              break;\r\n            case \"fire\":\r\n              style = {backgroundColor: 'red'}\r\n              break;\r\n            case \"grass\":\r\n              style = {backgroundColor: 'greenyellow'}\r\n              break;\r\n            case \"water\":\r\n              style = {backgroundColor: 'cyan'}\r\n              break;\r\n            case \"bug\":\r\n              style = {backgroundColor: 'rgb(115, 189, 3)'}\r\n              break;\r\n            case \"normal\":\r\n              style = {backgroundColor: 'rgb(180, 180, 180)'}\r\n              break;\r\n            case \"flying\":\r\n              style = {backgroundColor: 'rgb(0, 160, 255)'}\r\n              break;\r\n            case \"ground\":\r\n              style = {backgroundColor: 'rgb(200, 80, 50)'}\r\n              break;\r\n            case \"electric\":\r\n              style = {backgroundColor: 'yellow'}\r\n              break;\r\n            case \"fairy\":\r\n              style = {backgroundColor: 'pink'}\r\n              break;\r\n            default:\r\n              style = null;\r\n          }\r\n          return( <span style={style} key={type}>{type}</span>)\r\n    })\r\n    return ( \r\n        <div className=\"types\">\r\n            {types}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TypesList;","import React from 'react';\r\nimport '../styles/Card.css';\r\nimport TypesList from '../components/TypesList';\r\n\r\nconst Card = (props) => {\r\n    return ( \r\n        <div className=\"card\">\r\n            <h3>{props.pokemon.name[0].toUpperCase()}{props.pokemon.name.slice(1)}</h3>\r\n            <img src={props.pokemon.img} alt={props.pokemon.name}/>\r\n            <TypesList types = {props.pokemon.types}/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Card;","import React from 'react';\r\nimport Card from '../components/Card';\r\nimport '../styles/PokeList.css';\r\n\r\nconst PokeList = (props) => {\r\n    const {name, pokemons, select} = props.state;\r\n    let list = [...pokemons].sort( (a, b)=> a.id - b.id);\r\n\r\n    if(name && select) {\r\n        list = list.filter( pokemon => {\r\n            const value = name.toLowerCase();\r\n            const pokeName = pokemon.name.toLowerCase();\r\n            return pokeName.includes(value) && pokemon.types.includes(select)\r\n        });\r\n    }\r\n    else if(select){\r\n        list = list.filter(pokemon => pokemon.types.includes(select))\r\n    }\r\n    else if(name){\r\n        list = list.filter( pokemon => {\r\n            const value = name.toLowerCase();\r\n            const pokeName = pokemon.name.toLowerCase();\r\n            return pokeName.includes(value) \r\n        });\r\n    }\r\n    const filtredList= list.map(pokemon => <Card pokemon={pokemon} key={pokemon.id}/>)\r\n    \r\n    return ( \r\n        <div className=\"list\">\r\n            {filtredList}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PokeList;","import React from 'react';\r\nimport '../styles/Filter.css';\r\n\r\nconst Filter = (props) => {\r\n    return ( \r\n        <div className=\"filter\">\r\n            <h2>Find your Pokemon</h2>\r\n            <label htmlFor=\"name\">\r\n                Name: \r\n                <input type=\"text\" id=\"name\" onChange={props.handle} name=\"text\"/>\r\n            </label>\r\n            \r\n            <label htmlFor=\"select\">\r\n                Type:\r\n                <select onChange={props.handle} id=\"select\" name=\"select\">\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"poison\">Poison</option>\r\n                    <option value=\"fire\">Fire</option>\r\n                    <option value=\"grass\">Grass</option>\r\n                    <option value=\"water\">Water</option>\r\n                    <option value=\"bug\">Bug</option>\r\n                    <option value=\"normal\">Normal</option>\r\n                    <option value=\"flying\">Flying</option>\r\n                    <option value=\"ground\">Ground</option>\r\n                    <option value=\"electric\">Electric</option>\r\n                    <option value=\"fairy\">Fairy</option>\r\n                </select>\r\n             </label>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Filter;","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport PokeList from '../layouts/PokeList';\nimport Filter from '../layouts/Filter';\n//http://www.serebii.net/pokemongo/pokemon/001.png\nclass App extends Component {\n  state = {\n    name: '',\n    select: '',\n    pokemons: []\n  }\n\n  componentDidMount() {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=51\")\n      .then(response => response.json())\n      .then(response => response.results)\n      .then(response => response.map(item => {\n        fetch(item.url)\n          .then(response => response.json())\n          .then(response => {\n            return({\n              name: response.name,\n              img: response.sprites.front_default,\n              types: response.types.map(type => type.type.name),\n              id: response.id\n            })\n          })\n          .then(response => this.setState((prevState)=> ({\n            pokemons: prevState.pokemons.concat(response)\n          })))\n      return null}))\n  }\n\n  handleChange = (e)=> {\n    if(e.target.name===\"text\") {\n      this.setState({\n        name: e.target.value\n      })\n    }\n    else{\n      this.setState({\n        select: e.target.value\n      })\n    }\n  }\n  render() {\n    return (\n        <div className=\"app\">\n          <Filter handle={this.handleChange} />\n          <PokeList state={this.state}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}